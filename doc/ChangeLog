Sun Dec 09 2012   "Patrick Näf" <herzbube@herzbube.ch>
- Release of version 0.9.0
- Bugfixes
  - Another bug in the Ko detection logic is now fixed. For instance the
    following sequence: Black A2, White B2, Black pass, White C1, Black pass,
    White A1. If Black now tries to capture on B1, this was erroneously thought
    to be illegal due to Ko.
- Technical changes
  - The project's bugtracker is now hosted on GitHub
    (https://github.com/herzbube/littlego/issues)

Fri Nov 23 2012   "Patrick Näf" <herzbube@herzbube.ch>
- Release of version 0.9.0
- Features
  - 3 new settings have been added to profiles (maximum number of playout games,
    maximum thinking time, ponder time). These settings provide much improved
    control over the computer player's playing strength.
  - Individual profile settings are now hidden in an "Advanced configuration"
    screen. The user can still tweak those settings if she wants to, but there
    is also a simplified "playing strength" screen where, by selecting a playing
    strength, the user adjusts several profile settings in a single action,
    without having to know the technical details behind each setting.
  - The computer player can now be interrupted when it is thinking.
  - The user can now choose to send a crash report if the app crashes (available
    when the app is launched the next time after the crash). Settings are
    available on the "Diagnostics" tab. Read the in-game manual for more
    information.
  - The user can now send send a bug report email with attached diagnostics
    information file from within the app. The function is available on the
    "Diagnostics" tab. Read the in-game manual for more information.
  - The Game Info view now displays the currently active profile.
- Bugfixes
  - Loading an .sgf file with bad content no longer crashes the app. Thanks to
    Andrew Hersee for reporting this bug.
  - iPhone only: The Status line is now 2 lines high and no longer truncates
    texts. Thanks to Andrew Hersee for reporting this bug.
  - Improved protection against data loss after a crash (preferences data is
    saved more often, and the game in progress is saved after every move).
    Thanks to Tripp Lilley for reporting this bug.
  - It is no longer possible to enter empty profile and player names
  - iPad only: The Go board is now properly resized when the interface
    orientation changes while the "Play" tab is not visible
  - Display an error message when an illegal save game name is entered (instead
    of just silently not saving the game)
- Technical changes
  - The project's source code is now hosted on GitHub
    (https://github.com/herzbube/littlego/)
  - The project now has a Trello board where you can see what is currently being
    worked on (https://trello.com/board/little-go/4fd84c295027333d460dcc32)
  - An Ohloh page now provides mildly interesting source code statistics
    (https://www.ohloh.net/p/littlego)

Tue June 12 2012   "Patrick Näf" <herzbube@herzbube.ch>
- Release of version 0.8.1
- Features
  - New application icon
  - Added "Quick Start Guide" section to in-game help
- Bugfixes
  - A bug in a low-level function, which has been present in all versions of
    Little Go since its initial App Store release, has finally been found and
    exterminated. The bug caused "Undo" to not work correctly in certain
    situations. The error, when it manifested, did not have an immediate visible
    impact in the GUI, instead it caused all sorts of follow-up problems to
    occur (capturing stones might not work, suicide moves might be allowed,
    marking dead stones in scoring mode might not work correctly, and in some
    extreme cases it might even cause the app to crash).

Tue April 17 2012   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.8.0
- features
  - iPad version with support for retina display and all interface orientations
  - iPhone now supports upside-down portrait orientation
  - improved in-game help
- bugfixes
  - loading a game is now much faster
  - drawing, especially while moving a stone around the board, now uses 10-15%
    less CPU power, which improves battery life
  - Ko is no longer erroneously detected in certain situations (e.g. black has
    stones on A2, B1, B3, C1, C3, white has stones on B2 and C2; black now plays
    on D2, white on B2; in this situation, black C2 was erroneously thought to
    be illegal due to Ko)
  - profiles: "reuse subtree" is now always enabled (and cannot be disabled)
    when pondering is enabled; previously the two settings were independent of
    each other, which was a bug
  - loading archived game now works even if temporary file is still around for
    some reason
- technical changes
  - rewrite of Play view drawing code
  - lots of new unit tests
  - upgrade to iOS SDK 5.1

Tue January 3 2012   "Patrick Näf" <herzbube@herzbube.ch>
- release of bugfix version 0.7.1
- bugfixes
  - loading a game with no moves is now handled correctly (previously the app
    would hang and needed to be manually killed to get into a usable state
    again)
  - capturing moves that "almost" create a Ko are now correctly recognized as
    legal moves (e.g. black A1, white A2, black D1, white B2, black C2,
    white C1, previously the black move on B1 was thought to be illegal)
  - it is no longer possible to place stones outside the board in the top-left
    and top-right corners
  - board size 7x7 no longer allows handicaps greater than 4 (selecting such
    a handicap previously would result in no handicap being set at all)

Tue December 20 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.7
- this is the first release published to the App Store
- features
  - added application, tab bar and toolbar icons
  - no longer display an alert when a memory warning is received from iOS
  - rename "Debug" tab to "Diagnostics"
- user preferences
  - none
- bugfixes
  - dead stones are now always marked correctly (they were not marked correctly
    in release builds due to an uninitialized variable)
  - enabling scoring mode in mid-game made further game play impossible; this
    has been fixed
- technical changes
  - eliminated various memory leaks
  - application startup now mostly happens in a secondary thread; this makes
    it possible to run the application through Instruments

Sun December 4 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.6
- features
  - a stone is now displayed immediately when fingertip touches the board
  - GTP engine settings are now managed in profiles (instead of as player
    attributes)
  - an alert is displayed, and game and user preferences are now saved as an
    emergency when iOS sends a memory warning
  - the game info view now displays entries for "last move" and "next move"
  - cross-hair point distance from fingertip is now scaled based on board size
  - default board size is now 9x9 (down from 19x19)
  - new "Help" and "Credits" documents
  - all license documents are now displayed in their own table view
- user preferences
  - all user-defined players are removed on upgrade
  - all scoring user defaults are lost on upgrade
  - new user preferences for "inconsistent territory" (scoring) and
    "place stone under finger" (play view)
  - reorganization of Settings view into topical sections
- bugfixes
  - changing a player's type (human/computer) now shows/hides the profile as
    appropriate
  - game info view is now dismissed when a game is loaded
  - play view now correctly calculates board edge thickness
  - user preference "mark dead stones intelligently" is now displayed correctly
- technical changes
  - upgrade project to Xcode 4
  - user defaults are now versioned
  - the GTP log now displays seconds
  - a lot of code cleanup

Wed November 16 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.5
- features
  - when a new game is started it is now possible to select a handicap (up to
    9 stones in fixed locations) and a komi value
  - the user can now "flip" the Play view to see an Info view which displays
    information about the current game
  - new accurate scoring mode
    - when activated, the user can now interactively mark stone groups on the
      Play view as dead or alive
    - territory scoring is based on stone groups' dead or alive status
    - the Info view displays detailed tabular scoring information
    - scoring mode is activated automatically when the game ends, or by the
      user at any time during normal game play
  - the status line on the Play view now displays a message if the computer
    player passed
- bugfixes
  - the GTP log now displays all commands (previously some commands were lost)
- technical changes
  - none

Mon October 31 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.4
- features
  - the GTP log on the Debug view is now a table view (the raw log is still
    available by switching to the view's "backside")
  - arbitrary commands can now be submitted to the GTP engine
  - GTP commands can be "canned" for later or repeated submission
  - interruptions (e.g. a phone call) now pause a computer vs. computer game
  - sound/vibration is temporarily disabled during an interruption
- bugfixes
  - none
- technical changes
  - add Cocoa Lumberjack logging framework

Sun September 25 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.3
- features
  - computer players now have a set of GTP engine attributes that allow to
    limit memory consumption and, to a certain degree, playing strength
  - game archive
    - a game in progress can now be saved
    - existing games can be managed on a separate "Archive" tab
    - the game archive is accessible from iTunes so that archived games can be
      transferred to/from the iOS device when it is connected to iTunes
  - the game in progress is auto-saved when the application is put into the
    background so that the game is not lost if the application is subsequently
    killed for any reason
  - Play view now uses a grey instead of a b/w color scheme
- bugfixes
  - by default the GTP engine now uses 64 MB memory only; on an iPhone 3GS with
    256 MB memory this limit is sufficient that the system no longer kills the
    application because it uses up too much memory
  - application no longer hangs if GTP engine responds with error to final_score
  - capturing moves with a single stone now work correctly
  - pass moves are no longer drawn on the Go board
  - toolbar buttons on Play view now use an explicit text label instead of
    confusing icons
- technical changes
  - less view updates on the Play view, which means less power consumption and
    slightly snappier panning
  - add command processor design pattern
  - GTP commands can now be executed synchronously

Tue August 23 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.2
- features
  - players can be added/edited/removed; player attributes
    - name
    - is human / is computer player
  - start a new game
    - variable board size
    - select players
  - pause game in an automated game with two computer players
  - undo move
  - markup last played stone
  - play sound and/or vibrate when computer player makes a move
  - display star points for all board sizes
  - user preferences
- bugfixes
  - too many to enumerate
- technical changes
  - updated to use Fuego 1.1
  - unit test support

Fri April 8 2011   "Patrick Näf" <herzbube@herzbube.ch>
- release of version 0.1

Mon March 28 2011   "Patrick Näf" <herzbube@herzbube.ch>
- feature complete for 0.1

Thu March 24 2011   "Patrick Näf" <herzbube@herzbube.ch>
- first draft of human vs. computer implementation

Tue March 15 2011   "Patrick Näf" <herzbube@herzbube.ch>
- extremely crude computer vs. computer implementation

Fri March 4 2011   "Patrick Näf" <herzbube@herzbube.ch>
- proof of concept: create an instance of Fuego and communicate with that
  instance by sending commands and receiving responses

Thu Jan 27 2011   "Patrick Näf" <herzbube@herzbube.ch>
- created project
