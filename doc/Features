Purpose of this document
------------------------
This document provides a description of the features of the application.

Before development for a new feature or set of features begins, a description of
how the feature is supposed to work should be noted down in this document. The
description should not be too technical, and it should focus on how the user
perceives the feature to work. After writing down the description, it can then
serve as a guideline for the development effort.

If this document is kept up-to-date, it also serves as an informal reference,
e.g. to get going again after a longer break between development cycles. Keep in
mind that this document is NOT intended to be a manual. If it threatens to
become one, convert it into a proper MANUAL file.


Application lifecycle
---------------------
TODO


Starting a new game
-------------------
TODO


Playing the game
----------------
TODO


End of game and scoring
-----------------------
TODO


Changing preferences
--------------------
TODO


Working with .sgf files
-----------------------
- Saved games are available for syncing in iTunes
- The Archive view on the "Archive" tab lists previously saved games and
  provides the means to manage them as follows
  - Existing files are listed in a table view
  - The user can switch between different sorting criteria and sort orders
  - Available sorting criteria are file name and file date
  - Available sort orders are ascending and descending
  - The user can enter a search string to filter the list
  - The user can delete files by entering the table view's editing mode (a
    standard iOS feature)
  - Tapping the entry for a file drills down into the detail view for that file
  - Information on the detail view is filesystem related only; in a future
    release the detail view might also display data from within the .sgf file
  - The detail view offers options to load a game and to rename the game file
  - If the user attempts to rename a file and another file with the new name
    already exists, the rename operation fails. The user is informed about the
    problem via an alert view.
- Loading a game works as follows
  - The operation is initiated from the detail view, when a saved game is viewed
    on the Archive view
  - Overall, the procedure to load a game is very similar to starting a new
    game on the Play view
  - The user is presented with the choice of players that should be used for
    the game that is about to be loaded
  - The user cannot choose board size, Komi or Handicap, as these parameters
    are part of the saved game
  - If a game is already in progress, the user is asked to confirm that the
    game in progress will be abandoned
  - If the user confirms loading of the game, the "loadsgf" command is sent to
    the GTP engine
  - The application then queries the GTP engine to gather all the information
    it needs to start a new game (e.g. board size)
  - The application then starts the new game and switches to the Play view
- Saving the current game works as follows
  - The operation is initiated from the Play view on the "Play" tab
  - The option is available as soon as a new game has started
  - The user must enter a filename
  - The file extension .sgf (Smart Game Format) is not enforced
  - The application provides a sensible default filename that can be simply
    accepted
  - If a file already exists, the user is presented with the choice to
    overwrite the file
  - If saving the game proceeds, the "savesgf" command is sent to the GTP engine
  - The application remains on the Play view


Interacting with the GTP engine
-------------------------------
- All interaction with the GTP engine takes place in the Debug view on the
  "Debug" tab
- The Debug view is a table view with a GTP section. The cells in that section
  are
  - View the GTP log
  - Manage canned GTP commands
  - Edit settings
- GTP log
  - The GTP log can be viewed either in "structured" or in "raw" mode. A button
    with a "flip" animation allows to switch between the two modes.
  - Commands are listed in the order in which they were submitted, the most
    recent command appears at the bottom of the log
  - The log is dynamically updated when a new GTP command/response is submitted
    to or received from the GTP engine
  - The navigation item displays a button that can be used to submit a command
    - Selecting the button displays a view with an editable text field that
      allows the user to manually enter a command
    - The user may also select one of the canned commands; doing so transfers
      the command text into the text field where the command can be further
      edited (e.g. to add arguments)
    - The navigation item displays a button that is used to submit the command
    - Tapping the keyboard "Enter" key also submits the command
  - The "structured" GTP log lists submitted GTP commands in a table view
    - One table view cell corresponds to one command
    - A table view cell shows the following condensed information:
      - The command name
      - A timestamp when the command was submitted
      - A color-code for the status of the GTP response (green = success,
        red = failed, gray = no response)
    - Tapping a table view cell presents a detail view for that command with
      the following information
      - The same information as in the condensed table view cell
      - The GTP response status is additionally spelled out (the color-code
        is also displayed)
      - The GTP response is displayed in a text view with a fixed font; this
        retains the readability of formatted responses (e.g. the response to
        the "showboard" command)
      - The navigation item displays a button that can be used to add the
        command to the list of canned commands; the button is displayed only if
        the command does not yet exist in the list of canned commands
  - The "raw" GTP log displays commands and responses in a scrollable text view
    with a fixed font.
- Canned commands
  - The application comes with a predefined factory set of canned commands
  - Canned commands are listed as cells in a table view
  - Each table view cell displays the text of a single command
  - An "edit" button allows to delete and re-arrange commands via the standard
    iOS mechanism for table views
  - An "add" button allows to add a new command to the list
  - Tapping a cell presents a detail view that allows to edit the command string
- Settings
  - Maximum number of GTP commands that are to be retained in the GTP log.
    There is no "unlimited" setting so that memory usage remains tolerable.
  - Restore the factory set of "canned" GTP commands
  - Enable/disable making a sound when a GTP command is submitted by the user
  - Clear the GTP log


Managing the application log
----------------------------
TODO


The "About" and other documents
-------------------------------
TODO
