Purpose of this document
------------------------
This document lists the steps needed to make a project release.


Before the release
------------------
- If necessary, update the TODO file
- Make sure that no debugging stuff has been forgotten in the code (e.g. search
  for "xxx")
- Update the ChangeLog
- Replace the "Changes in this release" section of the README with a collection
  of the most important changes. A possible source for this is the git commit
  log.
- Update the "Known bugs" listed in the README
- Change the release date in the following files:
  - Roadmap
- Make sure that the version number is up to date in the following files
  (it should have been bumped already after the last release was made):
  - README
  - Info.plist
- Make sure that the copyright year is up to date in the following files (e.g.
  2009-2011 instead of 2009-2010):
  - All source files
  - Info.plist
- Set the active build configuration in Xcode to "Release" and build the project
  both for the simulator and for all target devices
- If there are any warnings, fix them
- Perform tests suitable to make sure that everything still works as intended
  -> DO THIS OUTSIDE OF THE DEVELOPMENT ENVIRONMENT (= Xcode), i.e. install and
     the application on real target devices, then launch it while not connected
     to Xcode
- Commit final changes (check with "git status" that nothing was forgotten)


Make a beta release (binary distribution only)
----------------------------------------------
- Build the application for the iOS device (not the simulator) and the
  "Distribution" configuration
- In Xcode, select "Build and Archive" from the "Build" menu
- This will open the "Organizer" window and display the archived application
  build
- Select the build, then click the "Share..." button
- Select a code-signing identity (default should be OK), then click the
  "Distribute for Enterprise..." button
- A dialog opens that lets you fill in a few things about how you intend to
  distribute the build
- Most important is that the URL matches exactly the URL of the .ipa file as it
  is going to be available for download
- Sensible values are
  URL = http://www.herzbube.ch/software/littlego/0.1/littlego.ipa
  Name = Little Go Beta Test
- You are now asked to specify a save location & name. This step creates both a
  .plist and an .ipa file, where the specified name serves as the base name for
  both files. Make sure to specify the same name as in the URL above.
- Make sure to get the "Ad Hoc Distribution Provisioning Profile" from the
  iOS Provisioning Portal. This profile is stored in a .mobileprovision file.
- Upload the .plist, .ipa and .mobileprovision files to the server from where
  testers can download it
- Create an index.html at the download location that provides the necessary
  download links


Make the release
----------------
- Tag and sign the release
  cd <projectdir>
  git tag -s -m "tagging release x.y" x.y <commit hash>
- Update the blessed repository
  cd <projectdir>
  git push --tags
- Generate the source distribution
  - Go to terminal
  - Run the following commands
    cd <projectdir>
    cd ..
    tar cfz littlego-0.1.tar.gz --exclude littlego/3rdparty --exclude littlego/build --exclude littlego/doxygen/html littlego/*
- Generate the binary distribution and submit it to Apple
  - TODO
- Wait for Apple to accept the submission and publish the new version in their
  App Store
- Make the source distributions available on the project website
  - Create a new directory in the public web space
  - Copy ChangeLog, README and tar ball (.tar.gz) into the new directory
  - Update tar ball symlinks in the "current" directory
  - Double-check that third party source code tar balls are also available for
    download
- Add the new version number to the bug tracker so that issues can be reported
  once the release has been made public
- Update the project website to announce the new release


After the release
-----------------
- Cleanup
  cd <projectdir>
  rm -r dist build
- Bump the version number to the next planned release; check above under
  "Before the release" which files are affected
